<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="rizon4_ros2_control" params="prefix robot_ip local_ip use_fake_hardware:=^|false fake_sensor_commands:=^|false initial_positions_file">
    <xacro:property name="initial_positions" value="${load_yaml(initial_positions_file)['initial_positions']}"/>

    <ros2_control name="FlexivHardwareInterface" type="system">
      <hardware>
        <xacro:if value="${use_fake_hardware}">
          <plugin>fake_components/GenericSystem</plugin>
          <param name="fake_sensor_commands">${fake_sensor_commands}</param>
          <param name="state_following_offset">0.0</param>
        </xacro:if>
        <xacro:unless value="${use_fake_hardware}">
          <plugin>flexiv_hardware/FlexivHardwareInterface</plugin>
          <param name="robot_ip">${robot_ip}</param>
          <param name="local_ip">${local_ip}</param>
        </xacro:unless>
      </hardware>

      <joint name="${prefix}joint1">
        <command_interface name="position">
          <param name="min">-2.7925</param>
          <param name="max">2.7925</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-2.0944</param>
          <param name="max">2.0944</param>
        </command_interface>
        <command_interface name="effort"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <param name="initial_position">${initial_positions['joint1']}</param>        <!-- initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}joint2">
        <command_interface name="position">
          <param name="min">-2.2689</param>
          <param name="max">2.2689</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-2.0944</param>
          <param name="max">2.0944</param>
        </command_interface>
        <command_interface name="effort"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <param name="initial_position">${initial_positions['joint2']}</param>        <!-- initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}joint3">
        <command_interface name="position">
          <param name="min">-2.9671</param>
          <param name="max">2.9671</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-2.4435</param>
          <param name="max">2.4435</param>
        </command_interface>
        <command_interface name="effort"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <param name="initial_position">${initial_positions['joint3']}</param>        <!-- initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}joint4">
        <command_interface name="position">
          <param name="min">-1.8675</param>
          <param name="max">2.6878</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-2.4435</param>
          <param name="max">2.4435</param>
        </command_interface>
        <command_interface name="effort"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <param name="initial_position">${initial_positions['joint4']}</param>        <!-- initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}joint5">
        <command_interface name="position">
          <param name="min">-2.9671</param>
          <param name="max">2.9671</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-4.8869</param>
          <param name="max">4.8869</param>
        </command_interface>
        <command_interface name="effort"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <param name="initial_position">${initial_positions['joint5']}</param>        <!-- initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}joint6">
        <command_interface name="position">
          <param name="min">-1.3963</param>
          <param name="max">4.5379</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-4.8869</param>
          <param name="max">4.8869</param>
        </command_interface>
        <command_interface name="effort"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <param name="initial_position">${initial_positions['joint6']}</param>        <!-- initial position for the FakeSystem -->
      </joint>
      <joint name="${prefix}joint7">
        <command_interface name="position">
          <param name="min">-2.9671</param>
          <param name="max">2.9671</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-4.8869</param>
          <param name="max">4.8869</param>
        </command_interface>
        <command_interface name="effort"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
        <param name="initial_position">${initial_positions['joint7']}</param>        <!-- initial position for the FakeSystem -->
      </joint>

      <sensor name="${prefix}force_torque_sensor">
        <state_interface name="force.x"/>
        <state_interface name="force.y"/>
        <state_interface name="force.z"/>
        <state_interface name="torque.x"/>
        <state_interface name="torque.y"/>
        <state_interface name="torque.z"/>
      </sensor>
      <sensor name="${prefix}external_wrench_in_base">
        <state_interface name="force.x"/>
        <state_interface name="force.y"/>
        <state_interface name="force.z"/>
        <state_interface name="torque.x"/>
        <state_interface name="torque.y"/>
        <state_interface name="torque.z"/>
      </sensor>
      <sensor name="${prefix}external_wrench_in_tcp">
        <state_interface name="force.x"/>
        <state_interface name="force.y"/>
        <state_interface name="force.z"/>
        <state_interface name="torque.x"/>
        <state_interface name="torque.y"/>
        <state_interface name="torque.z"/>
      </sensor>

      <sensor name="${prefix}tcp_pose">
        <state_interface name="position.x"/>
        <state_interface name="position.y"/>
        <state_interface name="position.z"/>
        <state_interface name="orientation.x"/>
        <state_interface name="orientation.y"/>
        <state_interface name="orientation.z"/>
        <state_interface name="orientation.w"/>
      </sensor>

    </ros2_control>
  </xacro:macro>
</robot>
